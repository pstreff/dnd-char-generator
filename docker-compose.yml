version: '3'
networks:
  app-tier:
    driver: bridge
services:
  app:
    image: pstreff/larvel
    build:
      context: ./docker/api/
      dockerfile: Dockerfile
    volumes:
      - ./backend:/var/www/html:cached
      - ./docker/api/nginx.conf:/etc/nginx/nginx.conf
    env_file:
      - .env
    links:
      - database
    networks:
      - app-tier
    ports:
      - "127.0.0.1:${APP_WEB_PORT:-8888}:80"
      - "127.0.0.1:${APP_WEB_PORT_SSL:-443}:443"

  app-scheduler:
    image: pstreff/larvel
    volumes:
      - ./backend:/var/www/html:cached
    networks:
      - app-tier
    env_file:
      - .env
    environment:
      CONTAINER_ROLE: scheduler

  app-queue:
    image: pstreff/larvel
    volumes:
      - ./backend:/var/www/html:cached
    networks:
      - app-tier
    env_file:
      - .env
    environment:
      CONTAINER_ROLE: queue

  database:
    image: mysql:5.7
    restart: unless-stopped
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - database_datavolume:/var/lib/mysql/
    ports:
      - "127.0.0.1:${DB_PORT_EXTERNAL:-3306}:${DB_PORT:-3306}"
    networks:
      - app-tier

  redis:
    image: redis:5.0-rc-alpine
    volumes:
      - redis_volume:/data
    ports:
      - "127.0.0.1:${REDIS_PORT_EXTERNAL:-6379}:${REDIS_PORT:-6379}"
    networks:
      - app-tier

  client:
    build: ./docker/client
    volumes:
      - ./client:/app:cached
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:8181:8181"
    links:
      - app
    environment:
      APP_ENV: ${SUFFIX:-local}
      DEV_UID: ${DEV_UID}
      DEV_GID: ${DEV_GID}
      APP_NETWORK_NAME: ${APP_NETWORK_NAME}
      APP_WEB_PORT: ${APP_WEB_PORT:-8888}
      APP_HOSTNAME: ${APP_HOSTNAME:-dnd-generator.test}
      APP_NAME: ${APP_NAME:-Generator}
    command: npm run serve
    working_dir: /app
    networks:
      - app-tier
volumes:
  database_datavolume:
  redis_volume:
